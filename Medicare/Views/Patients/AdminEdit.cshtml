@model Medicare.Models.ViewModels.AdminEditViewModel

@{
    ViewBag.Title = "Update patient";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);" aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/Dashboard">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="/Admin/Patients">Patients</a></li>
        <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
    </ol>
</nav>
<div class="container px-md-5 px-md-1">

    <div class="col-lg-6 mx-auto">

        <h2>Edit patient</h2>
        @if (Model == null)
        {
            <div class="alert alert-warning" role="alert">
                Patient not found
            </div>
        }
        else
        {



    <div>
        @using (Html.BeginForm("save", "patients"))
        {
            <div class="form-floating mb-3">
                @Html.TextBoxFor(m => m.User.Name, new { @class = "form-control ", placeholder = "Name", @readonly = "", disabled = "" })
                @Html.LabelFor(m => m.User.Name)
            </div>
            <div class="form-floating mb-3">
                @Html.TextBoxFor(m => m.User.Email, new { @class = "form-control ", placeholder = "Email address", @readonly = "", disabled = "" })
                @Html.LabelFor(m => m.User.Email)
            </div>
            <div class="form-floating mb-3">
                @Html.TextAreaFor(m => m.User.Address, new { @class = "form-control ", placeholder = "Address" })
                @Html.LabelFor(m => m.User.Address)
                @Html.ValidationMessageFor(m => m.User.Address)
            </div>
            <div class="mb-3">
                @Html.LabelFor(m => m.User.Gender)
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.User.Gender, "Male", new { @class = "form-check-input mx-3", id = "gender-male" })
                    <label class="form-check-label" for="gender-male">Male</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.User.Gender, "Female", new { @class = "form-check-input mx-3", id = "gender-female" })
                    <label class="form-check-label" for="gender-female">Female</label>
                </div>
            </div>
            <div class="form-floating mb-3">
                @Html.DropDownListFor(m => m.User.BloodTypeId, new SelectList(Model.BloodTypes, "Id", "Name"), "Select blood type", new { @class = "form-select" })
                @Html.LabelFor(m => m.User.BloodTypeId)
                @Html.ValidationMessageFor(m => m.User.BloodTypeId)

            </div>
            @Html.HiddenFor(m => m.User.Id)
            <button class="btn btn-primary mb-3 btn-lg w-100">Save</button>
        }
    </div>


        }
    </div>
</div>